[{"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/index.js":"1","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/reportWebVitals.js":"2","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/App.js":"3","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/localData.js":"4","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/utils/Credentials.js":"5","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/index.js":"6","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/spotify/SpotifyContainer.js":"7","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/Library.js":"8","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/login/Login.js":"9","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/Nav.js":"10","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/player/Song.js":"11","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/player/Player.js":"12","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/LibraryHeader.js":"13","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/LibrarySong.js":"14","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/PlayListItem.js":"15","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/spotify/SpotifyFunctions.js":"16","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/player/EmptySongMessage.js":"17"},{"size":478,"mtime":1611364467000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1611364467000,"results":"20","hashOfConfig":"19"},{"size":2112,"mtime":1612227123000,"results":"21","hashOfConfig":"19"},{"size":2410,"mtime":1612051375000,"results":"22","hashOfConfig":"19"},{"size":391,"mtime":1612052157000,"results":"23","hashOfConfig":"19"},{"size":950,"mtime":1612224608000,"results":"24","hashOfConfig":"19"},{"size":2305,"mtime":1612225829000,"results":"25","hashOfConfig":"19"},{"size":4289,"mtime":1612227288000,"results":"26","hashOfConfig":"19"},{"size":1349,"mtime":1612227604000,"results":"27","hashOfConfig":"19"},{"size":983,"mtime":1612224838000,"results":"28","hashOfConfig":"19"},{"size":1097,"mtime":1612227351000,"results":"29","hashOfConfig":"19"},{"size":4078,"mtime":1612120262000,"results":"30","hashOfConfig":"19"},{"size":1381,"mtime":1612114339000,"results":"31","hashOfConfig":"19"},{"size":1537,"mtime":1612114578000,"results":"32","hashOfConfig":"19"},{"size":1468,"mtime":1612113155000,"results":"33","hashOfConfig":"19"},{"size":3007,"mtime":1612227026000,"results":"34","hashOfConfig":"19"},{"size":1280,"mtime":1612227643000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1e57cxm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/index.js",[],["77","78"],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/reportWebVitals.js",[],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/App.js",["79","80"],"/* ==========================================================================\n** Music Player Main Component\n** 29/12/2020\n** Alan Medina Silva\n** ========================================================================== */\n\n// --------------------------------------\n// Imports\n// --------------------------------------\nimport { useState, useEffect, } from 'react';\nimport { SpotifyContainer, Login } from './components';\nimport * as SpotifyFunctions from './components/spotify/SpotifyFunctions.js'\nimport \"./styles/app.scss\";\n\n\n\n\n// --------------------------------------\n// Create Component\n// --------------------------------------\nconst App = () => {\n\n\n  // ?--------------------------------------\n  // ? Add State\n  // ?--------------------------------------\n  const [loggedInSpotify, setLoggedInSpotify] = useState(false);\n  const [token, setToken] = useState('');\n  const [updateToken, setUpdateToken] = useState(false)\n\n  // ?--------------------------------------\n  // ? Get Spotify Token\n  // ?--------------------------------------\n  useEffect(() => {\n    const accessToken = SpotifyFunctions.checkUrlForSpotifyAccessToken();\n    if (accessToken) {\n      setLoggedInSpotify(true);\n      setToken(accessToken)\n    }\n  })\n\n\n  // ?--------------------------------------\n  // ? If the Spotify Token expire, get a new one\n  // ?--------------------------------------\n  useEffect(() => {\n    if (!updateToken)\n      return;\n\n    if(loggedInSpotify) {\n      alert('Your Session has expired, you will be redirected to the login page')\n      redirectToHomePage();\n    }\n    \n\n\n  }, [updateToken]);\n\n\n  const redirectToHomePage = () => {\n    const homeUrl = window.location.origin;\n    window.location.href = homeUrl\n}\n\n\n\n  // ?--------------------------------------\n  // ? Render Component\n  // ?--------------------------------------\n  return (\n    <div className=\"App\">\n      {!token ? <Login /> : <SpotifyContainer token={token} updateToken = {setUpdateToken}/>}\n    </div>\n  );\n}\n\n// --------------------------------------\n// Export Component\n// --------------------------------------\nexport default App;\n","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/localData.js",[],["81","82"],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/utils/Credentials.js",[],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/index.js",[],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/spotify/SpotifyContainer.js",["83"],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/Library.js",["84","85","86","87","88","89","90","91","92","93"],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/login/Login.js",[],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/Nav.js",[],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/player/Song.js",[],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/player/Player.js",["94","95"],"/* ==========================================================================\n** Player Controls Component\n** 29/12/2020\n** Alan Medina Silva\n** ========================================================================== */\n\n\n// --------------------------------------\n// Imports\n// --------------------------------------\n    import React, {useRef, useState, useEffect} from 'react';\n    import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n    import {faPlay, faAngleLeft, faAngleRight, faPause} from \"@fortawesome/free-solid-svg-icons\"\n\n// --------------------------------------\n// Create Component\n// --------------------------------------\n    const Player = ({currentSong, isPlaying, setIsPlaying, audioRef}) => {\n\n        const {preview_url, duration_ms} = currentSong;\n        // const audio_src = external_urls.spotify;\n        \n\n        // ?--------------------------------------\n        // ? Handle State\n        // ?--------------------------------------\n\n            const [songInfo, setSongInfo] = useState({\n                currentTime : 0,\n                duration: duration_ms || null\n            });\n\n            useEffect(() => {\n                console.log(\"ðŸš€ ~ file: Player.js ~ line 34 ~ useEffect ~ isPlaying\", isPlaying);\n                if(isPlaying && audioRef.current.paused) {\n                    \n                    setIsPlaying(!isPlaying); \n                    audioRef.current.play();\n                    \n                }else \n                    \n                return () => {\n                    console.log(\"ðŸš€ ~ file: Player.js ~ line 38 ~ return ~ cleanup\");\n                }\n                    \n            }, [isPlaying, currentSong, audioRef])\n            \n        \n        // ?--------------------------------------\n        // ? Event Handlers\n        // ?--------------------------------------\n            const playSongHandler = (event) => {\n                isPlaying === false ?audioRef.current.play() : audioRef.current.pause();\n                setIsPlaying(!isPlaying);\n            }\n\n            //? Update song Timers\n            const timeUpdateHandler = (event) => {\n                const currentTime = event.target.currentTime;\n                const duration = event.target.duration || 0;\n                setSongInfo({...songInfo, currentTime, duration})\n            }\n\n        \n            //? Format Song Timers\n            const formatTime = (time) => {\n                if(time !== null || !isNaN(time) )\n                    return `${Math.floor(time/60)} : ${Math.floor(time % 60)}`\n                return '';\n            }\n\n            const dragHandler = (event) => {\n                audioRef.current.currentTime = event.target.value;\n                setSongInfo({...songInfo, currentTime : event.target.value})\n            }\n\n\n\n\n        // ?--------------------------------------\n        // ? Render Component\n        // ?--------------------------------------\n        return(\n            <div className=\"playerContainer\"> \n                <div className=\"timeControl\">\n                    <p>{formatTime(songInfo.currentTime)}</p>\n                    <input type=\"range\" name=\"range\" id=\"range\" min = {0} max = {songInfo.duration} value = {songInfo.currentTime} onChange = {dragHandler}/>\n                    <p>{formatTime(songInfo.duration)}</p>\n                </div>\n\n                <div className=\"playControl\">\n                    <FontAwesomeIcon  className = \"back\"  size=\"2x\" icon = {faAngleLeft} />\n                    <FontAwesomeIcon  onClick = {playSongHandler} className = \"play\"  size=\"2x\" icon = {isPlaying ? faPause : faPlay } />\n                    <FontAwesomeIcon  className = \"forward\"  size=\"2x\" icon = {faAngleRight} />\n                </div>\n\n                 <audio ref= {audioRef && audioRef} src = {preview_url} onTimeUpdate = {timeUpdateHandler} onLoadedMetadata = {timeUpdateHandler} ></audio>\n        \n            </div>\n        )\n\n    }\n\n// --------------------------------------\n// Export Component\n// --------------------------------------\n    export default Player;\n","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/LibraryHeader.js",["96"],"/* ==========================================================================\n** Library Header \n** 29/12/2020\n** Alan Medina Silva\n** ========================================================================== */\n\n\n// --------------------------------------\n// Imports\n// --------------------------------------\nimport React, {useEffect} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft} from \"@fortawesome/free-solid-svg-icons\"\n\n// --------------------------------------\n// Create Component\n// --------------------------------------\n    const LibraryHeader = ({playlistTitle, playlistImage, backToLibrary}) => {\n        \n\n        // const {cover, name, artist, id, active} = song;\n        // const mainImage = images[0].url;\n        \n        // const activeClass = activePlaylist? 'selected' : '';\n        // className={`LibraryHeader ${active ? 'selected' : ''}`}\n\n        //? setCurrentSong(songId) comes from parent Component\n        return(\n            <div className = 'library-header'>\n                <FontAwesomeIcon  className = \"back\"  icon = {faArrowLeft} onClick = {backToLibrary} />\n                \n                <h2> {playlistTitle} </h2>\n             </div>\n        )\n\n    }\n\n// --------------------------------------\n// Export Component\n// --------------------------------------\n    export default LibraryHeader;\n","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/LibrarySong.js",["97"],"/* ==========================================================================\n** Library Song Component\n** 29/12/2020\n** Alan Medina Silva\n** ========================================================================== */\n\n\n// --------------------------------------\n// Imports\n// --------------------------------------\n    import React, {useEffect} from 'react';\n\n// --------------------------------------\n// Create Component\n// --------------------------------------\n    const LibrarySong = ({track, selectSong, activeSong}) => {\n        \n\n        const { name, artists, id, album} = track;\n        const { images } = album;\n        // const {name} = artist\n        const mainImage = images[0].url\n        const activeClass = activeSong? 'selected' : '';\n        // className={`librarySong ${active ? 'selected' : ''}`}\n\n\n        \n       \n        //? setCurrentSong(songId) comes from parent Component\n        return(\n            <div className={`librarySong ${activeClass}`} onClick = {() => selectSong(track)} onDoubleClick={() => selectSong(id)} id= {id}>\n               <img src={mainImage && mainImage} alt={name && name}/>\n                <div className=\"songDescription\">\n                    <h3> {name && name} </h3>\n                    <h4> {artists && artists[0].name}</h4>\n                    <h4> {album.name && album.name}</h4>\n                </div>\n             </div>\n        )\n\n    }\n\n// --------------------------------------\n// Export Component\n// --------------------------------------\n    export default LibrarySong;\n","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/songsLibrary/PlayListItem.js",["98"],"/* ==========================================================================\n** Playlist Item Component\n** 29/12/2020\n** Alan Medina Silva\n** ========================================================================== */\n\n\n// --------------------------------------\n// Imports\n// --------------------------------------\n    import React, {useEffect} from 'react';\n\n// --------------------------------------\n// Create Component\n// --------------------------------------\n    const PlaylistItem = ({id,name, images, isPublic, selectPlaylist, activePlaylist}) => {\n        \n\n        // const {cover, name, artist, id, active} = song;\n        const mainImage = images[0].url;\n        \n        const activeClass = activePlaylist? 'selected' : '';\n        // className={`PlaylistItem ${active ? 'selected' : ''}`}\n\n        //? setCurrentSong(songId) comes from parent Component\n        return(\n            <div className={`librarySong ${activeClass}`} onClick = {() => selectPlaylist(id)} onDoubleClick={(event) => event.preventDefault()} id= {id}>\n               <img src={mainImage && mainImage} alt={name && name}/>\n                <div className=\"songDescription\">\n                    <h3> {name && name} </h3>\n                    <h4> {isPublic ? 'public' : 'private'}</h4>\n                </div>\n             </div>\n        )\n\n    }\n\n// --------------------------------------\n// Export Component\n// --------------------------------------\n    export default PlaylistItem;\n","/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/spotify/SpotifyFunctions.js",["99","100","101","102","103"],"/Users/ilemionline/Documents/projects/react/musicPlayer/client/src/components/player/EmptySongMessage.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":34,"column":3,"nodeType":"110","endLine":34,"endColumn":12,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":57,"column":6,"nodeType":"113","endLine":57,"endColumn":19,"suggestions":"114"},{"ruleId":"104","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"108","severity":1,"message":"117","line":39,"column":8,"nodeType":"113","endLine":39,"endColumn":15,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":11,"column":17,"nodeType":"110","messageId":"121","endLine":11,"endColumn":23},{"ruleId":"119","severity":1,"message":"122","line":12,"column":10,"nodeType":"110","messageId":"121","endLine":12,"endColumn":25},{"ruleId":"119","severity":1,"message":"123","line":14,"column":10,"nodeType":"110","messageId":"121","endLine":14,"endColumn":21},{"ruleId":"119","severity":1,"message":"124","line":18,"column":10,"nodeType":"110","messageId":"121","endLine":18,"endColumn":16},{"ruleId":"119","severity":1,"message":"125","line":18,"column":18,"nodeType":"110","messageId":"121","endLine":18,"endColumn":29},{"ruleId":"119","severity":1,"message":"126","line":18,"column":31,"nodeType":"110","messageId":"121","endLine":18,"endColumn":43},{"ruleId":"119","severity":1,"message":"127","line":18,"column":45,"nodeType":"110","messageId":"121","endLine":18,"endColumn":52},{"ruleId":"119","severity":1,"message":"128","line":30,"column":12,"nodeType":"110","messageId":"121","endLine":30,"endColumn":24},{"ruleId":"119","severity":1,"message":"129","line":30,"column":26,"nodeType":"110","messageId":"121","endLine":30,"endColumn":41},{"ruleId":"108","severity":1,"message":"130","line":77,"column":8,"nodeType":"113","endLine":77,"endColumn":23,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"120","line":11,"column":20,"nodeType":"110","messageId":"121","endLine":11,"endColumn":26},{"ruleId":"108","severity":1,"message":"132","line":46,"column":16,"nodeType":"113","endLine":46,"endColumn":50,"suggestions":"133"},{"ruleId":"119","severity":1,"message":"134","line":11,"column":16,"nodeType":"110","messageId":"121","endLine":11,"endColumn":25},{"ruleId":"119","severity":1,"message":"134","line":11,"column":20,"nodeType":"110","messageId":"121","endLine":11,"endColumn":29},{"ruleId":"119","severity":1,"message":"134","line":11,"column":20,"nodeType":"110","messageId":"121","endLine":11,"endColumn":29},{"ruleId":"119","severity":1,"message":"135","line":1,"column":8,"nodeType":"110","messageId":"121","endLine":1,"endColumn":15},{"ruleId":"119","severity":1,"message":"136","line":2,"column":8,"nodeType":"110","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"119","severity":1,"message":"137","line":3,"column":8,"nodeType":"110","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"119","severity":1,"message":"138","line":4,"column":8,"nodeType":"110","messageId":"121","endLine":4,"endColumn":15},{"ruleId":"119","severity":1,"message":"139","line":5,"column":8,"nodeType":"110","messageId":"121","endLine":5,"endColumn":13},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLoggedInSpotify'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["142"],"React Hook useEffect has a missing dependency: 'loggedInSpotify'. Either include it or remove the dependency array.","ArrayExpression",["143"],["140"],["141"],"React Hook useEffect has missing dependencies: 'getUserPlaylists' and 'updateToken'. Either include them or remove the dependency array. If 'updateToken' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["144"],"no-unused-vars","'useRef' is defined but never used.","unusedVar","'FontAwesomeIcon' is defined but never used.","'Credentials' is defined but never used.","'faPlay' is defined but never used.","'faAngleLeft' is defined but never used.","'faAngleRight' is defined but never used.","'faPause' is defined but never used.","'songsLoading' is assigned a value but never used.","'setSongsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPlaylistSongs'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'setIsPlaying'. Either include it or remove the dependency array. If 'setIsPlaying' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["146"],"'useEffect' is defined but never used.","'Spotify' is defined but never used.","'uniq' is defined but never used.","'axios' is defined but never used.","'flatten' is defined but never used.","'chunk' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Add dependencies array: []",{"range":"157","text":"158"},"Update the dependencies array to be: [loggedInSpotify, updateToken]",{"range":"159","text":"160"},"Update the dependencies array to be: [getUserPlaylists, token, updateToken]",{"range":"161","text":"162"},"Update the dependencies array to be: [getPlaylistSongs, songsEndPoint]",{"range":"163","text":"164"},"Update the dependencies array to be: [isPlaying, currentSong, audioRef, setIsPlaying]",{"range":"165","text":"166"},[1230,1230],", []",[1585,1598],"[loggedInSpotify, updateToken]",[1346,1353],"[getUserPlaylists, token, updateToken]",[2746,2761],"[getPlaylistSongs, songsEndPoint]",[1662,1696],"[isPlaying, currentSong, audioRef, setIsPlaying]"]